<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webthree.batchtransfer.mapper.BatchTransferTaskMapper">

    <!-- 结果映射 -->
    <resultMap id="BatchTransferTaskResultMap" type="com.webthree.batchtransfer.entity.BatchTransferTask">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="creator_address" property="creatorAddress" jdbcType="VARCHAR"/>
        <result column="recipient_count" property="totalRecipients" jdbcType="INTEGER"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="VARCHAR" 
                typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="tx_hash" property="txHash" jdbcType="VARCHAR"/>
        <result column="error_message" property="errorMessage" jdbcType="LONGVARCHAR"/>
        <result column="execution_token" property="executionToken" jdbcType="VARCHAR"/>
        <result column="execution_started_at" property="executionStartedAt" jdbcType="TIMESTAMP"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, task_name, creator_address, recipient_count, total_amount, status, 
        tx_hash, error_message, execution_token, execution_started_at, created_at, updated_at
    </sql>

    <!-- 插入新任务 -->
    <insert id="insert" parameterType="com.webthree.batchtransfer.entity.BatchTransferTask" 
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO batch_transfer_task (
            task_name, creator_address, recipient_count, total_amount, status, 
            tx_hash, error_message, execution_token, execution_started_at, created_at, updated_at
        ) VALUES (
            #{taskName}, #{creatorAddress}, #{totalRecipients}, #{totalAmount}, #{status}, 
            #{txHash}, #{errorMessage}, #{executionToken}, #{executionStartedAt}, NOW(), NOW()
        )
    </insert>

    <!-- 根据ID查询任务 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE id = #{id}
    </select>

    <!-- 查询所有任务列表 -->
    <select id="selectAll" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        ORDER BY created_at DESC
    </select>

    <!-- 根据状态查询任务列表 -->
    <select id="selectByStatus" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE status = #{status,jdbcType=VARCHAR}
        ORDER BY created_at DESC
    </select>

    <!-- 根据创建者地址查询任务列表 -->
    <select id="selectByCreatorAddress" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE creator_address = #{creatorAddress}
        ORDER BY created_at DESC
    </select>

    <!-- 根据创建者地址和状态查询任务列表 -->
    <select id="selectByCreatorAddressAndStatus" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE creator_address = #{creatorAddress}
        AND status = #{status,jdbcType=VARCHAR}
        ORDER BY created_at DESC
    </select>

    <!-- 更新任务状态 -->
    <update id="updateStatus">
        UPDATE batch_transfer_task
        SET 
            status = #{status},
            updated_at = NOW()
            <if test="txHash != null and txHash != ''">
                , tx_hash = #{txHash}
            </if>
            <if test="errorMessage != null and errorMessage != ''">
                , error_message = #{errorMessage}
            </if>
            <if test="executionToken != null and executionToken != ''">
                , execution_token = #{executionToken}
            </if>
            <if test="executionStartedAt != null">
                , execution_started_at = #{executionStartedAt}
            </if>
        WHERE id = #{id}
    </update>

    <!-- 仅更新交易哈希 -->
    <update id="updateTxHashOnly">
        UPDATE batch_transfer_task
        SET 
            tx_hash = #{txHash},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据执行令牌查询任务 -->
    <select id="selectByExecutionToken" parameterType="java.lang.String" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE execution_token = #{executionToken}
    </select>

    <!-- 查询超时的执行中任务 -->
    <select id="selectTimeoutExecutingTasks" parameterType="java.lang.Integer" resultMap="BatchTransferTaskResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM batch_transfer_task
        WHERE status = 'EXECUTING'
        AND execution_started_at IS NOT NULL
        AND execution_started_at &lt; DATE_SUB(NOW(), INTERVAL #{timeoutMinutes} MINUTE)
        ORDER BY execution_started_at ASC
    </select>

    <!-- 根据ID删除任务 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM batch_transfer_task
        WHERE id = #{id}
    </delete>

</mapper>